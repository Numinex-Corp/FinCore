<log4net>
     <appender name="MQLConnectorLogRollingFileAppender" type="log4net.Appender.RollingFileAppender">
      <dateTimeStrategy type="log4net.Appender.RollingFileAppender" />
      <file type="log4net.Util.PatternString" value="%property{LogFilePath}" />
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      <appendToFile value="true" />
      <rollingStyle value="Size" />
      <maxSizeRollBackups value="30" />
      <layout type="log4net.Layout.PatternLayout">
        <conversionPattern value="%date (%thread) [%property{Account}]: %message%newline" />
      </layout>
    </appender>

  
      <!--
     Buffer Forwarding  section:
    - MQLConnectorLogAsyncBufferingAppender : will buffer the log message in memory before send the log to RollingFileAppender to write to app log file by LogRollingFileAppender
                                   : this BufferingAppender will limit  300000 which are pending on the buffer, if the items in buffer more than the limit, will skip the log
    
   -->
    <appender name="MQLConnectorLogAsyncBufferingAppender" type="MQLConnector.AsyncForwardingAppenderHotSwap" >
      <GrowType value="Skip" />
      <Fix value="268" />
      <GrowLimit  value="500" />
      <appender-ref ref="MQLConnectorLogRollingFileAppender" />
    </appender>
  
    <!--
    Logger section:
    - following sections are logger section which will be used on C# code to refer to the log4ner logger. C# code will refer to  following logger and use them as a reference for write log to files
   -->
    <logger name="MQLConnector">
      <level value="All"></level>
      <appender-ref ref="MQLConnectorLogAsyncBufferingAppender" />
    </logger>

  
</log4net>